--Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT Firstname, LastName, Customerid, Country 
FROM customers 
WHERE Country <> 'USA' ; 

--Show only the Customers from Brazil.

SELECT Firstname, LastName, Customerid, Country 
FROM customers 
WHERE Country = 'Brazil' ;

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT Customers.FirstName , Customers.LastName, Invoices.Invoiceid , Invoices.InvoiceDate, Invoices.BillingCountry
FROM Customers 
LEFT JOIN Invoices 
ON Customers.CustomerId = Invoices.CustomerId;

--Show the Employees who are Sales Agents.

SELECT * 
FROM employees
WHERE title LIKE '%Sales%Agent%' ;

--Find a unique/distinct list of billing countries from the Invoice table.

SELECT * 
FROM Invoices 
WHERE BillingCountry <> 'USA'
AND Total > 2 
AND BillingState <> 'NULL' ;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT employees.FirstName , employees.LastName, Invoices.InvoiceId
FROM employees
JOIN Customers ON Customers.SupportRepId = employees.EmployeeId
JOIN Invoices ON Invoices.CustomerId = Customers.CustomerId;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT Invoices.Total, Customers.FirstName, Customers.LastName, Customers.Country, employees.FirstName AS 'Agent First', employees.LastName AS 'Agent Last'
FROM Invoices 
JOIN Customers ON Invoices.CustomerId = Customers.CustomerId 
JOIN employees ON employees.EmployeeId = Customers.SupportRepId; 

--How many Invoices were there in 2009?

SELECT Count(Invoices.InvoiceId)
FROM Invoices 
WHERE InvoiceDate LIKE '%2009%' ;

--What are the total sales for 2009?

SELECT SUM(Total) 
FROM Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'; 

--Write a query that includes the purchased track name with each invoice line ID.

SELECT tracks.Name, Invoice_items.InvoiceLineId 
FROM tracks
JOIN Invoice_items ON Invoice_items.TrackId = tracks.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT tracks.Name, tracks.Composer, Invoice_items.InvoiceLineId
FROM tracks
JOIN Invoice_items ON Invoice_items.TrackId = tracks.TrackId;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.Name AS 'Track' , media_types.Name as 'Media type' , albums.Title AS 'Album' , genres.Name AS 'Genre'
FROM tracks
JOIN media_types ON media_types.MediaTypeId = tracks.MediaTypeId
JOIN albums ON albums.AlbumId = tracks.AlbumId
JOIN genres ON genres.GenreId = tracks.GenreId;

--Show the total sales made by each sales agent.

SELECT SUM(Invoices.Total), employees.FirstName, employees.LastName
FROM Invoices 
JOIN employees ON employees.EmployeeId = Customers.SupportRepId
JOIN Customers ON invoices.CustomerId = Customers.CustomerId
GROUP BY employeeid ; 

--Which sales agent made the most dollars in sales in 2009?

SELECT ROUND(SUM(Invoices.Total), 2) , employees.FirstName, employees.LastName
FROM Invoices 
JOIN employees ON employees.EmployeeId = Customers.SupportRepId
JOIN Customers ON invoices.CustomerId = Customers.CustomerId
WHERE InvoiceDate LIKE '%2009%'
GROUP BY employees.FirstName
ORDER BY (ROUND(SUM(Invoices.Total), 2)) DESC LIMIT 1; 
